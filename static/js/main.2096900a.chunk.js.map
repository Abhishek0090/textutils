{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","btn","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","console","log","newText","toUpperCase","showAlert","lowText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototypes","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","role","word","lower","charAt","slice","captialize","msg","App","setMode","btnText","setBtnText","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2096900a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { a } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                {/* <Link className=\"nav-a active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-a\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n              </ul>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\"  onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >{props.btn}</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n//setting the prop type\r\nNavbar.prototypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    aboutText : 'I m hacker'\r\n};","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleClick = () => {\r\n    console.log(\"UpperCase Was Clicked!\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To UpperCase!\",\"success\")\r\n  };\r\n  const onLowerClick = () => {\r\n    let lowText = text.toLowerCase();\r\n    setText(lowText);\r\n    props.showAlert(\"Converted To LowerCase!\",\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onClear = () => {\r\n    let textclear = \"\";\r\n    setText(textclear);\r\n    props.showAlert(\"Data has been Cleared!\",\"success\")\r\n  };\r\n\r\n  const onHandleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text has been Copied\",\"success\")\r\n\r\n  };\r\n\r\n  const onhandleExtraSpace = () =>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Spaces has been Removed\",\"success\")\r\n\r\n  }\r\n  const [text, setText] = useState(\"\"); //hooks\r\n  // setText('I m the best'); -> valid way to change the state\r\n  return (\r\n    <>\r\n      <div className=\"Container\"  style= {{\r\n                color : props.mode==='dark'?'white':'black' //ternary operator\r\n            }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          {/* <label for=\"myBox\" class=\"form-label\">Write Your Thoughts Down</label> */}\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            placeholder=\"Enter Your Text Here\"\r\n            style= {{\r\n                backgroundColor : props.mode==='dark'?'#070115':'white',\r\n                color : props.mode==='dark'?'white':'black'\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={onLowerClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={onClear}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={onHandleCopy}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={onhandleExtraSpace}>\r\n          Remove Spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-2\" style= {{\r\n                color : props.mode==='dark'?'white':'black' //ternary operator\r\n       }}>                                                                                                                \r\n        <h1>Your Paragraph summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <b>{0.008 * text.split(\" \").length} Minutes taken to read</b>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const captialize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{captialize(props.alert.type)}</strong> : {props.alert.msg}\r\n      {/* <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Whether Dark mode is enable or not\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#090329\";\n      setBtnText(\"Disable Dark Mode\");\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(()=>{\n      //     document.title = \"TextUtils is Running\"\n      // },2000);\n      // setInterval(() => {\n      //   document.title = \"Install Now\"\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      setBtnText(\"Enable Dark Mode\");\n      showAlert(\"Dark Mode Has Been Disabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      \n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n        btn={btnText}\n        />\n      {/* <Navbar />  */}\n      {/* <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {new Date().toLocaleTimeString()}.</h2>\n      </div> */}\n      <Alert alert={alert} />\n      <div className=\"container\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the Text to Analyze below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}